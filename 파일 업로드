
COS - 파일이 먼저 업로드 되는 단점이 있다.
      사진이면 사진을 확인하고 올리는 게 아니라 올리고 나서 삭제가 가능한 치명적인 단점이 있다.
      그래서 실무에서 잘 안 쓴다.

Spring Boot - MultiPartFormData는 바뀌지 않는다.
              MultipartFile.class 에서 파라미터를 MultiPartForm이라고 지정하면 RequestGetParameter를 받을 수 있다.
              스프링 부트에선 업로드 파일만 처리하면 된다. 
              업로드가 미리 이루어지는 게 아니라 검사를 다 하고 통과를 하면 최종적으로 업로드한다.
              COS 방식보다 더 보안이 뛰어나기 때문에 실무에서 스프링 부트를 사용한다.

              대신에 스프링 부트에선 이름 중복 방지 기능이 없다. 이렇게 되면 이름이 겹치는 상황이 발생한다.
                >> 이름 중복 방지 기능을 추가하면 됨

@ 파일명 중복 방지
      시,분,초,밀리세컨(ms) 단위까지 넣어서 파일 이름을 만들어주면 된다. 즉 현재 시간을 long 타입으로 바꿔서 넣어주는 시스템인 것이다.
      이렇게되면 파일이 중복되어도 덮어쓰기로 드라이브에 저장되는 것이 아니라 시간을 따서 새로운 이름으로 업로드 된다.
      fileName = System.currentTimeMillis() = fileName;      

@ UUID (Universally Unique Identifier) - 네트워크 고유식별자 표준방식 (IP보다 더 깊은 방식)
      전 세계에서 유일하게 하나밖에 없는 특별한 번호를 만드는 방법
      길고 복잡해서 두 개가 같은 번호가 될 가능성이 없다.
      번호를 아주 길고 복잡하게 만들어서 겹치지 않게 해준다.
      컴퓨터에서 파일 이름을 정하거나, 데이터베이스에서 데이터를 구분할 때 사용된다.
      >> 각 파일이나 데이터가 헷갈리지 않고 잘 구분된다.

      fileName = UUID.randomUUID().toString().replace("-","") + fileName;
      UUID를 랜덤으로 만들겠다. (16진수로 이루어진 20자리 이상의 문자)
      - 16진수: 0부터 9까지의 숫자에다가 A,B,C,D,E,F까지 더해 총 16개의 기호를 사용해 숫자를 세는 방법)
            컴퓨터는 16진수를 많이 사용하는데, 컴퓨터 내부의 데이터 처리 방식과 잘 맞기 때문이다. 주로 컴퓨터 메모리 주소나 색상을 표현할 때 사용

